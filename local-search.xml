<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>nginx配置http(80)自动跳转到https(443)</title>
    <link href="/2024/10/08/nginx%E9%85%8D%E7%BD%AEhttp-80-%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AC%E5%88%B0https-443/"/>
    <url>/2024/10/08/nginx%E9%85%8D%E7%BD%AEhttp-80-%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AC%E5%88%B0https-443/</url>
    
    <content type="html"><![CDATA[<p>nginx配置http(80)自动跳转到https(443)分两种情况，一是，单个域名80端口重定向到443端口，二是，泛域名的80端口重定向到443端口，如何启用https访问可参考网址：针对这两种情况分别进行介绍。</p><h3 id="1-单域名配置"><a href="#1-单域名配置" class="headerlink" title="1. 单域名配置"></a>1. 单域名配置</h3><p>将访问单域名 <a href="http://www.example.com/">www.example.com</a> 的80端口重定向到443端口，只需在80端口配置中增加一条跳转命令：rewrite ^(.*)$ https:&#x2F;&#x2F;${server_name}$1 permanent; 即可实现访问单域名http自动跳转到https的功能，配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> www.example.com;<br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)$</span> https://<span class="hljs-variable">$&#123;server_name&#125;</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>; <span class="hljs-comment">#增加内容</span><br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span> www.example.com; <br><br>    <span class="hljs-attribute">ssl_certificate</span>    /opt/cert/www.example.com.pem;<br>    <span class="hljs-attribute">ssl_certificate_key</span>   /opt/cert/www.example.com.key;<br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>    <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  <br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;  <br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>    <span class="hljs-attribute">add_header</span> Strict-Transport-Security <span class="hljs-string">&quot;max-age=31536000&quot;</span>;<br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span>   http://127.0.0.1:8080;<br>        <span class="hljs-attribute">proxy_set_header</span>   Host      <span class="hljs-variable">$host</span>;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Real-IP   <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Forwarded-For   <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="2-泛域名配置"><a href="#2-泛域名配置" class="headerlink" title="2. 泛域名配置"></a>2. 泛域名配置</h3><p>将访问泛域名*.example.com的80端口重定向到443端口，只需在80端口配置中增加一条跳转命令：return 301 <a href="https://httphosthttphostrequest_uri/">https://httphosthttph​ostrequest_uri</a>; 即可实现泛域名http自动跳转到https的功能，配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> <span class="hljs-regexp">*.example.com</span>;<br>    <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$http_host</span><span class="hljs-variable">$request_uri</span>; <span class="hljs-comment">#增加内容</span><br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span> <span class="hljs-regexp">*.example.com</span>; <br><br>    <span class="hljs-attribute">ssl_certificate</span>    /opt/cert/www.example.com.pem;<br>    <span class="hljs-attribute">ssl_certificate_key</span>   /opt/cert/www.example.com.key;<br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>    <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  <br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;  <br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>    <span class="hljs-attribute">add_header</span> Strict-Transport-Security <span class="hljs-string">&quot;max-age=31536000&quot;</span>;<br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span>   http://127.0.0.1:8080;<br>        <span class="hljs-attribute">proxy_set_header</span>   Host      <span class="hljs-variable">$host</span>;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Real-IP   <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span>   X-Forwarded-For   <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="检查配置文件是否正确命令"><a href="#检查配置文件是否正确命令" class="headerlink" title="检查配置文件是否正确命令"></a>检查配置文件是否正确命令</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx -t</span><br></code></pre></td></tr></table></figure><h3 id="然后重启nginx服务后，http自动跳转到https的配置即可生效了。"><a href="#然后重启nginx服务后，http自动跳转到https的配置即可生效了。" class="headerlink" title="然后重启nginx服务后，http自动跳转到https的配置即可生效了。"></a>然后重启nginx服务后，http自动跳转到https的配置即可生效了。</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service restart nginx</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p>文章作者： 阳光•雨<br>本文链接： <a href="https://www.liuwg.com/archives/nginxautohttps">https://www.liuwg.com/archives/nginxautohttps</a></p>          </div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>《非暴力沟通》附录</title>
    <link href="/2024/09/19/%E3%80%8A%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A%E3%80%8B%E9%99%84%E5%BD%95/"/>
    <url>/2024/09/19/%E3%80%8A%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A%E3%80%8B%E9%99%84%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="诚实地表达自己，而不批评、指责"><a href="#诚实地表达自己，而不批评、指责" class="headerlink" title="诚实地表达自己，而不批评、指责"></a>诚实地表达自己，而不批评、指责</h3><ol><li><p>观察<br>我所观察（看、听、回忆、想）到的有助于（或无助于）我的福祉的具体行为：<br>“当我（看、听、想到我看到的、听到的）……”</p></li><li><p>感受<br>对于这些行为，我有什么养的感受（情感而非思想）：<br>“我感到……”</p></li><li><p>需要<br>什么样的需要或价值（而非偏好或某种具体的行为）导致我那样的感受：<br>“因为我需要&#x2F;看重……”</p></li><li><p>请求<br>清楚地请求（而非命令）那些能丰富我生命的具体行为：<br>“你是否愿意？”</p></li></ol><h3 id="关切地倾听他人，而不解读为批评或指责"><a href="#关切地倾听他人，而不解读为批评或指责" class="headerlink" title="关切地倾听他人，而不解读为批评或指责"></a>关切地倾听他人，而不解读为批评或指责</h3><ol><li><p>观察<br>你所观察（看、听、回忆、想）到的有助于（或无助于）你的福祉的具体行为：<br>“当你（看、听、想到你看到的&#x2F;听到的）……”</p></li><li><p>感受<br>对于这些行为，你有什么样的感受（是情感而非思想）：<br>“你感到……吗？”</p></li><li><p>需要<br>什么样的需要或价值（而非偏好或某种具体的行为）导致你那样的感受：<br>“因为你需要&#x2F;看重……”</p></li><li><p>请求<br>关切地倾听那些能丰富你生命的具体请求，而不解读为命令：<br>“所以，你想……”</p></li></ol><div class="note note-warning">            <p>文章作者: 马歇尔·卢森堡</p>          </div>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
